@model ReviewUserViewModel

<div class="col-md-2">
    <div class="review-avatar-box text-left">
        <img class="avatar-img img-responsive" src="@Model.AvatarPath" alt="No profile photo" />
    </div>

    <div class="text-left">
        <h4>
            <a href="/User/Reviews?authorId=@Model.AuthorId">@Model.UserName</a>

            @if (Model.Badge != UserBadge.None)
            {
                <span title="@Model.Badge.GetDescription()" class="crq-user-badge glyphicon glyphicon-certificate"></span>
            }
        </h4>
    </div>

    @{
        if (Model.IsBlogger)
        {
            <div class="text-left">
                <a href="@Html.AttachSchemeToDomain(@Model.BlogUrl)" target="_blank">Blog</a>
            </div>
        }

        if (Model.HasWatchlists)
        {
            <div class="text-left">
                <a href="/Watchlists/GetForUser?userId=@Model.AuthorId" target="_blank">Watchlists</a>
            </div>
        }
    }

    <div class="text-left">
        <h5>
            @Html.PluralizeValue(@Model.CountriesVisited, "country"), @Html.ActionLink(
linkText: Html.PluralizeValue(Model.ReviewsCount, "beach").ToString(),
actionName: "Reviews",
controllerName: "User",
routeValues: new { authorId = Model.AuthorId },
htmlAttributes: null)
        </h5>
    </div>

    <div class="text-left">Level @Model.Level traveller</div>

    <div class="text-left">
        <h5>@Model.ThanksReceived thanks</h5>
    </div>

    <div class="text-left">
        <h6 class="review-date">@Model.PostedOn.ToString("MMM d, yyyy")</h6>
    </div>
</div>