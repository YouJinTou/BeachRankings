@model ReviewHeadViewModel

<div class="row">
    <div class="col-md-2">
        <div class="review-upvotes">
            <h4 class="text-left">
                <i class="no-upvotes-info display-none">No upvotes</i>
                <i class="upvotes-info">@Html.PluralizeValue(Model.Upvotes, "upvote")</i>
            </h4>
        </div>
    </div>

    <div class="beach-score-box beach-score-box-extended col-md-1">
        <div class="vertical-center">@Html.ParseNullableValue(Model.TotalScore, "-")</div>
    </div>

    <div class="concise-review-beach-name col-md-6 col-sm-5">
        <h3>
            @Html.GetReviewBeachName(Model.BeachName, Model.PrimaryDivisionName, Model.SecondaryDivisionName)
        </h3>
    </div>

    <div class="review-controls-box col-md-2 pull-right">
        @{
            if (User.Identity.CanVoteForReview(Model.AuthorId))
            {
                <div class="col-xs-1">
                    <span data-review-id="@Model.Id" data-already-upvoted="@Model.AlreadyUpvoted" class="icon-upvote a-like-span control glyphicon glyphicon-thumbs-up" title="Give thanks"></span>
                </div>
            }
        }
        <div class="col-xs-1">
            <a data-html-export-review="@Model.Id" class="review-export control a-like-span glyphicon glyphicon-export" title="Export a summary of this review"></a>
        </div>
        @{
            if (User.Identity.CanEditReview(Model.AuthorId))
            {
                <div class="col-xs-1">
                    <a class="control a-like-span glyphicon glyphicon-edit" title="Edit review" href="/Reviews/Edit/@Model.Id"></a>
                </div>
                <div class="col-xs-1">
                    <a class="delete-review-link control a-like-span glyphicon glyphicon-remove" title="Delete review" href="/Reviews/Delete/@Model.Id"></a>
                </div>
            }
        }
    </div>
</div>