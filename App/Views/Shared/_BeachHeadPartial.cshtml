@model DetailedBeachViewModel

<div class="beach-aside-box col-lg-2 col-lg-offset-1 col-sm-2 col-xs-12 text-left">
    <aside class="beach-aside custom-canvas text-left">
        <h4><strong>Beach info</strong></h4>

        <hr />

        <div class="aside-element">Country: <a href="/Countries/Statistics/@Model.CountryId">@Model.Country</a></div>
        <div class="aside-element">Region: <a href="/PrimaryDivisions/Statistics/@Model.PrimaryDivisionId">@Model.PrimaryDivision</a></div>
        <div class="aside-element">Area: <a href="/SecondaryDivisions/Statistics/@Model.SecondaryDivisionId">@Model.SecondaryDivision</a></div>
        <div class="aside-element">Sub-area: <a href="/TertiaryDivisions/Statistics/@Model.TertiaryDivisionId">@Model.TertiaryDivision</a></div>
        <div class="aside-element">Locality: <a href="/QuaternaryDivisions/Statistics/@Model.QuaternaryDivisionId">@Model.QuaternaryDivision</a></div>
        <div class="aside-element">Water body: <a href="/WaterBodies/Statistics/@Model.WaterBodyId">@Model.WaterBody</a></div>
        <div class="coordinates aside-element">Coordinates: <a href="https://www.google.com/maps/place/@Model.Coordinates" target="_blank">@Model.Coordinates</a></div>
    </aside>

    <aside class="beach-aside custom-canvas text-left">
        <h4 class="bloggers-aside-header"><strong>What bloggers say</strong></h4>

        <hr />

        <div class="bloggers-aside-links">
            @Html.DisplayFor(model => model.BlogArticles)
        </div>
    </aside>
</div>

<div class="beach-head custom-canvas col-lg-8 col-sm-10 col-xs-12">
    <div class="row">
        <div class="beach-main-stats col-sm-1">
            <div class="beach-score-box beach-score-box-extended">
                <div class="vertical-center">@Html.ParseNullableValue(Model.TotalScore, "-")</div>
            </div>
        </div>

        <div class="text-left beach-name col-sm-6">
            <h3>
                <a href="/Beaches/Details/@Model.Id">@Model.Name</a>
            </h3>
            <h4>
                <i>@Html.PluralizeValue(@Model.Reviews.Count(), "review")</i>
            </h4>
        </div>

        <div class="main-beach-controls text-right col-sm-5">
            @{
                if (this.User.Identity.IsAuthenticated)
                {
                    <span data-watchlist-trigger="@Model.Id" class="watchlist-trigger a-like-span control glyphicon glyphicon-star"
                          title="Add to watchlist"></span>
                    <div class="watchlist-overview"></div>
                }
            }

            @{
                if (User.Identity.CanEditBeach(Model.CreatorId, Model.Reviews.Count()))
                {
                    <form id="delete-beach-form" class="delete-beach-wrapper" method="post" action="/Beaches/Delete/@Model.Id">
                        <a class="a-like-span control glyphicon glyphicon-edit" title="Edit beach" href="/Beaches/Edit/@Model.Id"></a>
                        <span id="delete-beach-span" title="Delete beach" class="a-like-span control glyphicon glyphicon-remove"></span>
                    </form>
                }
            }
            <span id="btn-beach-export-html" data-html-export-beach="@Model.Id" class="beach-export a-like-span glyphicon glyphicon-export"
                  title="Export a summary of this beach's scores"></span>
            @{
                if (!Model.UserHasRated)
                {
                    @Html.ActionLink("Rate this beach", "Post", "Reviews", new { id = Model.Id }, new { @class = "btn btn-cta" })
                }
                else
                {
                    <span class="already-rated pull-right glyphicon glyphicon-ok-circle" title="Already rated"></span>
                }
            }
        </div>
    </div>

    <div class="main-wrapper row">
        <div class="col-xs-12">
            <div class="main-wrapper-section row">
                <div class="col-xs-12">
                    @Html.Partial("_CriteriaTableHorizontalPartial", new List<HorizontalCriteriaViewModel> { Model.Criteria })
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12">
                    <div class="main-wrapper-section row">
                        <div class="col-md-4 col-sm-3 col-xs-12">
                            <div class="beach-images light-gallery slick-carousel">
                                @Html.DisplayFor(model => model.Images)
                            </div>

                            <div class="beach-images-count">
                                <h4>
                                    @Html.PluralizeValue(Model.ImageCount, "photo")
                                </h4>
                            </div>
                        </div>


                        <div class="col-md-8 col-sm-9 col-xs-12">
                            @{
                                if (Model.CrossTable.Rows != null && Model.CrossTable.Rows.Count() > 0)
                                {
                                    @Html.Partial("_RankCrossTablePartial", Model.CrossTable)
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="main-wrapper-section row">
                <div class="beach-external-api-details col-md-4 col-sm-6 col-xs-12"></div>
                <div class="beach-external-api-details col-md-4 col-sm-6 col-xs-12"></div>
                <div class="beach-external-api-details col-md-4 col-sm-12"></div>
            </div>
        </div>
    </div>
</div>  