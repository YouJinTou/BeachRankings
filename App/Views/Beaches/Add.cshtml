@model BeachRankings.App.Models.ViewModels.AddBeachViewModel

@{
    ViewBag.Title = "Add Beach";
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "addBeachForm" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-6">
            <div class="form-horizontal">
                <h4>Beach</h4>

                <hr />

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-5">
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", data_textbox_name = "" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LocationName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-5">
                        @Html.TextBoxFor(model => model.LocationName, new { @class = "form-control", data_textbox_location_name = "" })
                        @Html.ValidationMessageFor(model => model.LocationName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-5">
                        @Html.TextBoxFor(model => model.Description, new { @class = "form-control", data_textbox_description = "" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.WaterBody, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-5">
                        @Html.TextBoxFor(model => model.WaterBody, new { @class = "form-control", data_ddl_water_body = "" })
                        @Html.ValidationMessageFor(model => model.WaterBody, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Coordinates, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-5">
                        @Html.TextBoxFor(model => model.Coordinates, new { @class = "form-control", data_textbox_coordinates = "" })
                        @Html.ValidationMessageFor(model => model.Coordinates, "", new { @class = "text-danger" })
                    </div>
                </div>

                <span class="field-validation-valid text-danger" data-generic-validation-alert=""></span>
            </div>
        </div>

        <div class="col-md-6 google-map" id="map"></div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input data-btn-create-beach="" type="submit" value="Add beach" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Top", "Beaches")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("/Scripts/jquery-ui.js")
    @Scripts.Render("~/Scripts/Internal/beaches.js")
    <script type="text/javascript">
        jQuery.validator.setDefaults({ ignore: null });
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?language=en&libraries=places&key=AIzaSyC8j9vpJT7miOsV0jLllMmqZdXpSnCzs9c&callback=gMapManager.initMap">
    </script>
}

@section BeachStyles{
    @Styles.Render("~/Content/Internal/beaches.css")
    @Styles.Render("~/Content/jquery-ui.css")
}