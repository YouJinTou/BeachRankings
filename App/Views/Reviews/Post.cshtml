@model PostReviewViewModel

@{
    ViewBag.Title = "Rate " + Model.BeachHead.Name;
}

@Html.Partial("_BeachHeadPartial", Model.BeachHead)

<div class="review-container custom-canvas col-lg-8 col-lg-offset-3 col-sm-10 col-sm-offset-2 col-xs-12">
    <div class="row">
        @using (Html.BeginForm("Post", "Reviews", FormMethod.Post, new { id = "submit-review-form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal ">
                <hr />
                @Html.ValidationSummary(string.Empty, new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-3 col-sm-11 col-xs-12" })
                    <div class="col-md-6 col-md-offset-0 col-sm-9 col-sm-offset-1 col-xs-10 col-xs-offset-1">
                        @Html.TextAreaFor(model => model.Content,
                                                   new
                                                   {
                                                       data_review_content = "",
                                                       @class = "form-control review-textarea custom-focus-black",
                                                       @rows = 5,
                                                       @cols = 40,
                                                       @placeholder = "Share your impressions of this beach"
                                                   })
                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                        <span class="pull-right"><sub>A maximum of 3000 symbols</sub></span>
                    </div>
                </div>

                @{
                    if (this.Model.IsBlogger)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.ArticleLinks, new { @class = "control-label col-md-3 col-sm-11 col-xs-12" })
                            <div id="links-container" class="col-md-5 col-md-offset-0 col-sm-9 col-xs-10 col-xs-offset-1">
                                <input type="text" class="blog-link form-control custom-focus-black" />
                            </div>
                            <div class="col-md-3 col-md-offset-0 col-sm-3 col-sm-offset-1 col-xs-1 col-xs-offset-1 text-left">
                                <span class="add-more-links glyphicon glyphicon-plus-sign" title="Add another link"></span>
                            </div>
                            @Html.ValidationMessageFor(model => model.ArticleLinks, "", new { @class = "text-danger" })
                        </div>
                    }
                }

                @Html.Partial("_ReviewCriteriaPartial", Model.Criteria)

                <div class="form-group">
                    <label for="uploader" class="control-label col-md-3 col-sm-11 col-xs-12">Beach photos</label>
                    <div class="col-md-5 col-md-offset-0 col-sm-9 col-xs-10 col-xs-offset-1">
                        <input id="uploader" type="file" name="images" class="upload" multiple />
                    </div>
                </div>
                <sup>Up to 3.5 MB of JPG or PNG images</sup>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input data-btn-submit-review="" type="submit" value="Post review" class="btn btn-cta" />
                    </div>
                </div>
            </div>

            @Html.HiddenFor(model => model.BeachHead.Id)
            @Html.HiddenFor(model => model.ArticleLinks, new { id = "hdn-article-links" })
            @Html.HiddenFor(model => model.SandQuality, new { id = "hdn-sand-quality" })
            @Html.HiddenFor(model => model.BeachCleanliness, new { id = "hdn-beach-cleanliness" })
            @Html.HiddenFor(model => model.BeautifulScenery, new { id = "hdn-beautiful-scenery" })
            @Html.HiddenFor(model => model.CrowdFree, new { id = "hdn-crowd-free" })
            @Html.HiddenFor(model => model.Infrastructure, new { id = "hdn-infrastructure" })
            @Html.HiddenFor(model => model.WaterVisibility, new { id = "hdn-water-visibility" })
            @Html.HiddenFor(model => model.LitterFree, new { id = "hdn-litter-free" })
            @Html.HiddenFor(model => model.FeetFriendlyBottom, new { id = "hdn-feet-friendly-bottom" })
            @Html.HiddenFor(model => model.SeaLifeDiversity, new { id = "hdn-sea-life-diversity" })
            @Html.HiddenFor(model => model.CoralReef, new { id = "hdn-coral-reef" })
            @Html.HiddenFor(model => model.Snorkeling, new { id = "hdn-snorkeling" })
            @Html.HiddenFor(model => model.Kayaking, new { id = "hdn-kayaking" })
            @Html.HiddenFor(model => model.Walking, new { id = "hdn-walking" })
            @Html.HiddenFor(model => model.Camping, new { id = "hdn-camping" })
            @Html.HiddenFor(model => model.LongTermStay, new { id = "hdn-long-term-stay" })
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/review-post")
}

@section ReviewsStyles {
    @Styles.Render("~/Content/External/dragdealer.css")
    @Styles.Render("~/Content/External/slick/slick.css")
    @Styles.Render("~/Content/External/slick/slick-theme.css")
    @Styles.Render("~/Content/External/lightGallery/css/lightgallery.min.css")
    @Styles.Render("~/Content/Internal/beach-details.css")
    @Styles.Render("~/Content/Internal/reviews.css")
    @Styles.Render("~/Content/Internal/criteria-tables.css")
}